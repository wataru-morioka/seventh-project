upstream flask {
    ip_hash;
    server flask:6000;
}

server {
    listen 443 ssl http2;
    server_name flask.site;
    charset utf-8;
    real_ip_header X-Forwarded-For;  #remote-addrを書き換える
    proxy_set_header Host $http_host;
    proxy_set_header Connection "";
    proxy_set_header X-Real-IP $remote_addr;    # x-real-ipにクライアントIPを設定。APIへ渡す。
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # X-Forwarded-For に直前のProxy(＝ELB)を追加 
    proxy_redirect  http:// https://;

    ssl_certificate      /etc/nginx/tls/nginx-server.crt;
    ssl_certificate_key  /etc/nginx/tls/nginx-server.key;

    access_log /var/log/nginx/site/access.log main;
    error_log /var/log/nginx/site/error.log warn;

    client_max_body_size 100M;   # adjust to taste

    location /static {
        alias /static; 
    }

    location / {
        uwsgi_pass  flask;
        include     /etc/nginx/uwsgi_params;
    }
}

server {
    listen 80;
    server_name wataru.site;
    root /var/www/site/docs;
    charset utf-8;
    real_ip_header X-Forwarded-For;  #remote-addrを書き換える
    proxy_set_header Host $http_host;
    proxy_set_header Connection "";
    proxy_set_header X-Real-IP $remote_addr;    # x-real-ipにクライアントIPを設定。APIへ渡す。
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # X-Forwarded-For に直前のProxy(＝ELB)を追加 
    # proxy_redirect  http:// https://;

    access_log /var/log/nginx/site/access.log main;
    error_log /var/log/nginx/site/error.log warn;

    client_max_body_size 100M;   # adjust to taste

    location / {
        try_files $uri $uri/ /index.html;
    }

     location /static {
        alias /static; 
    }
}

server {
    listen 443 ssl http2;
    server_name wataru.site;
    root /var/www/site/docs;
    charset utf-8;
    real_ip_header X-Forwarded-For;  #remote-addrを書き換える
    proxy_set_header Host $http_host;
    proxy_set_header Connection "";
    proxy_set_header X-Real-IP $remote_addr;    # x-real-ipにクライアントIPを設定。APIへ渡す。
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # X-Forwarded-For に直前のProxy(＝ELB)を追加 
    proxy_redirect  http:// https://;

    ssl_certificate      /etc/nginx/tls/nginx-server.crt;
    ssl_certificate_key  /etc/nginx/tls/nginx-server.key;

    access_log /var/log/nginx/site/access.log main;
    error_log /var/log/nginx/site/error.log warn;

    client_max_body_size 100M;   # adjust to taste

    location / {
        try_files $uri $uri/ /index.html;
    }

     location /static {
        alias /static; 
    }
}

upstream django {
    ip_hash;
    server django:6000;
}

server {
    listen 443 ssl http2;
    server_name django.service;
    charset utf-8;
    real_ip_header X-Forwarded-For;  #remote-addrを書き換える
    proxy_set_header Host $http_host;
    proxy_set_header Connection "";
    proxy_set_header X-Real-IP $remote_addr;    # x-real-ipにクライアントIPを設定。APIへ渡す。
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # X-Forwarded-For に直前のProxy(＝ELB)を追加 
    proxy_redirect  http:// https://;

    ssl_certificate      /etc/nginx/tls/nginx-server.crt;
    ssl_certificate_key  /etc/nginx/tls/nginx-server.key;

    access_log /var/log/nginx/service/access.log main;
    error_log /var/log/nginx/service/error.log warn;

    client_max_body_size 100M;   # adjust to taste

    location /static {
        alias /static; 
    }

    location / {
        uwsgi_pass  django;
        include     /etc/nginx/uwsgi_params;
    }
}

server {
    listen 443 ssl http2;
    server_name  express.management;
    real_ip_header X-Forwarded-For;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_redirect  http:// https://;

    ssl_certificate      /etc/nginx/tls/nginx-server.crt;
    ssl_certificate_key  /etc/nginx/tls/nginx-server.key;

    access_log /var/log/nginx/management/access.log main;
    error_log /var/log/nginx/management/error.log warn;

    client_max_body_size 100M;   # adjust to taste

    location / {
        proxy_pass http://express:7000/;
    }
}